#legacySQL
SELECT
REGEXP_MATCH(c.content,'(import\s+numpy\.|from numpy\._distributor_init\s+import\s+[a-zA-Z0-9_]+)' ) AS numpy_module__distributor_init,
REGEXP_MATCH(c.content,'(import\s+numpy\.|from numpy\._globals\s+import\s+[a-zA-Z0-9_]+)' ) AS numpy_module__globals,
REGEXP_MATCH(c.content,'(import\s+numpy\.|from numpy\._import_tools\s+import\s+[a-zA-Z0-9_]+)' ) AS numpy_module__import_tools,
REGEXP_MATCH(c.content,'(import\s+numpy\.|from numpy\._mat\s+import\s+[a-zA-Z0-9_]+)' ) AS numpy_module__mat,
REGEXP_MATCH(c.content,'(import\s+numpy\.|from numpy\._mklinit\s+import\s+[a-zA-Z0-9_]+)' ) AS numpy_module__mklinit,
REGEXP_MATCH(c.content,'(import\s+numpy\.|from numpy\.add_newdocs\s+import\s+[a-zA-Z0-9_]+)' ) AS numpy_module_add_newdocs,
REGEXP_MATCH(c.content,'(import\s+numpy\.|from numpy\.char\s+import\s+[a-zA-Z0-9_]+)' ) AS numpy_module_char,
REGEXP_MATCH(c.content,'(import\s+numpy\.|from numpy\.compat\s+import\s+[a-zA-Z0-9_]+)' ) AS numpy_module_compat,
REGEXP_MATCH(c.content,'(import\s+numpy\.|from numpy\.core\s+import\s+[a-zA-Z0-9_]+)' ) AS numpy_module_core,
REGEXP_MATCH(c.content,'(import\s+numpy\.|from numpy\.ctypeslib\s+import\s+[a-zA-Z0-9_]+)' ) AS numpy_module_ctypeslib,
REGEXP_MATCH(c.content,'(import\s+numpy\.|from numpy\.emath\s+import\s+[a-zA-Z0-9_]+)' ) AS numpy_module_emath,
REGEXP_MATCH(c.content,'(import\s+numpy\.|from numpy\.fft\s+import\s+[a-zA-Z0-9_]+)' ) AS numpy_module_fft,
REGEXP_MATCH(c.content,'(import\s+numpy\.|from numpy\.lib\s+import\s+[a-zA-Z0-9_]+)' ) AS numpy_module_lib,
REGEXP_MATCH(c.content,'(import\s+numpy\.|from numpy\.linalg\s+import\s+[a-zA-Z0-9_]+)' ) AS numpy_module_linalg,
REGEXP_MATCH(c.content,'(import\s+numpy\.|from numpy\.ma\s+import\s+[a-zA-Z0-9_]+)' ) AS numpy_module_ma,
REGEXP_MATCH(c.content,'(import\s+numpy\.|from numpy\.math\s+import\s+[a-zA-Z0-9_]+)' ) AS numpy_module_math,
REGEXP_MATCH(c.content,'(import\s+numpy\.|from numpy\.matrixlib\s+import\s+[a-zA-Z0-9_]+)' ) AS numpy_module_matrixlib,
REGEXP_MATCH(c.content,'(import\s+numpy\.|from numpy\.polynomial\s+import\s+[a-zA-Z0-9_]+)' ) AS numpy_module_polynomial,
REGEXP_MATCH(c.content,'(import\s+numpy\.|from numpy\.random\s+import\s+[a-zA-Z0-9_]+)' ) AS numpy_module_random,
REGEXP_MATCH(c.content,'(import\s+numpy\.|from numpy\.rec\s+import\s+[a-zA-Z0-9_]+)' ) AS numpy_module_rec,
REGEXP_MATCH(c.content,'(import\s+numpy\.|from numpy\.sys\s+import\s+[a-zA-Z0-9_]+)' ) AS numpy_module_sys,
REGEXP_MATCH(c.content,'(import\s+numpy\.|from numpy\.testing\s+import\s+[a-zA-Z0-9_]+)' ) AS numpy_module_testing,
REGEXP_MATCH(c.content,'(import\s+numpy\.|from numpy\.version\s+import\s+[a-zA-Z0-9_]+)' ) AS numpy_module_version,
REGEXP_MATCH(c.content,'(import\s+numpy\.|from numpy\.warnings\s+import\s+[a-zA-Z0-9_]+)' ) AS numpy_module_warnings,
REGEXP_MATCH( c.content,'(np\.|numpy\.)add_newdoc\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_add_newdoc,
REGEXP_MATCH( c.content,'(np\.|numpy\.)alen\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_alen,
REGEXP_MATCH( c.content,'(np\.|numpy\.)all\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_all,
REGEXP_MATCH( c.content,'(np\.|numpy\.)allclose\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_allclose,
REGEXP_MATCH( c.content,'(np\.|numpy\.)alltrue\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_alltrue,
REGEXP_MATCH( c.content,'(np\.|numpy\.)amax\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_amax,
REGEXP_MATCH( c.content,'(np\.|numpy\.)amin\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_amin,
REGEXP_MATCH( c.content,'(np\.|numpy\.)angle\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_angle,
REGEXP_MATCH( c.content,'(np\.|numpy\.)any\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_any,
REGEXP_MATCH( c.content,'(np\.|numpy\.)append\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_append,
REGEXP_MATCH( c.content,'(np\.|numpy\.)apply_along_axis\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_apply_along_axis,
REGEXP_MATCH( c.content,'(np\.|numpy\.)apply_over_axes\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_apply_over_axes,
REGEXP_MATCH( c.content,'(np\.|numpy\.)argmax\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_argmax,
REGEXP_MATCH( c.content,'(np\.|numpy\.)argmin\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_argmin,
REGEXP_MATCH( c.content,'(np\.|numpy\.)argpartition\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_argpartition,
REGEXP_MATCH( c.content,'(np\.|numpy\.)argsort\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_argsort,
REGEXP_MATCH( c.content,'(np\.|numpy\.)argwhere\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_argwhere,
REGEXP_MATCH( c.content,'(np\.|numpy\.)around\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_around,
REGEXP_MATCH( c.content,'(np\.|numpy\.)array2string\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_array2string,
REGEXP_MATCH( c.content,'(np\.|numpy\.)array_equal\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_array_equal,
REGEXP_MATCH( c.content,'(np\.|numpy\.)array_equiv\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_array_equiv,
REGEXP_MATCH( c.content,'(np\.|numpy\.)array_repr\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_array_repr,
REGEXP_MATCH( c.content,'(np\.|numpy\.)array_split\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_array_split,
REGEXP_MATCH( c.content,'(np\.|numpy\.)array_str\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_array_str,
REGEXP_MATCH( c.content,'(np\.|numpy\.)asanyarray\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_asanyarray,
REGEXP_MATCH( c.content,'(np\.|numpy\.)asarray\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_asarray,
REGEXP_MATCH( c.content,'(np\.|numpy\.)asarray_chkfinite\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_asarray_chkfinite,
REGEXP_MATCH( c.content,'(np\.|numpy\.)ascontiguousarray\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_ascontiguousarray,
REGEXP_MATCH( c.content,'(np\.|numpy\.)asfarray\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_asfarray,
REGEXP_MATCH( c.content,'(np\.|numpy\.)asfortranarray\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_asfortranarray,
REGEXP_MATCH( c.content,'(np\.|numpy\.)asmatrix\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_asmatrix,
REGEXP_MATCH( c.content,'(np\.|numpy\.)asscalar\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_asscalar,
REGEXP_MATCH( c.content,'(np\.|numpy\.)atleast_1d\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_atleast_1d,
REGEXP_MATCH( c.content,'(np\.|numpy\.)atleast_2d\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_atleast_2d,
REGEXP_MATCH( c.content,'(np\.|numpy\.)atleast_3d\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_atleast_3d,
REGEXP_MATCH( c.content,'(np\.|numpy\.)average\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_average,
REGEXP_MATCH( c.content,'(np\.|numpy\.)bartlett\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_bartlett,
REGEXP_MATCH( c.content,'(np\.|numpy\.)base_repr\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_base_repr,
REGEXP_MATCH( c.content,'(np\.|numpy\.)binary_repr\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_binary_repr,
REGEXP_MATCH( c.content,'(np\.|numpy\.)blackman\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_blackman,
REGEXP_MATCH( c.content,'(np\.|numpy\.)block\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_block,
REGEXP_MATCH( c.content,'(np\.|numpy\.)bmat\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_bmat,
REGEXP_MATCH( c.content,'(np\.|numpy\.)broadcast_arrays\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_broadcast_arrays,
REGEXP_MATCH( c.content,'(np\.|numpy\.)broadcast_to\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_broadcast_to,
REGEXP_MATCH( c.content,'(np\.|numpy\.)byte_bounds\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_byte_bounds,
REGEXP_MATCH( c.content,'(np\.|numpy\.)choose\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_choose,
REGEXP_MATCH( c.content,'(np\.|numpy\.)clip\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_clip,
REGEXP_MATCH( c.content,'(np\.|numpy\.)column_stack\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_column_stack,
REGEXP_MATCH( c.content,'(np\.|numpy\.)common_type\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_common_type,
REGEXP_MATCH( c.content,'(np\.|numpy\.)compress\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_compress,
REGEXP_MATCH( c.content,'(np\.|numpy\.)convolve\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_convolve,
REGEXP_MATCH( c.content,'(np\.|numpy\.)copy\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_copy,
REGEXP_MATCH( c.content,'(np\.|numpy\.)corrcoef\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_corrcoef,
REGEXP_MATCH( c.content,'(np\.|numpy\.)correlate\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_correlate,
REGEXP_MATCH( c.content,'(np\.|numpy\.)count_nonzero\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_count_nonzero,
REGEXP_MATCH( c.content,'(np\.|numpy\.)cov\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_cov,
REGEXP_MATCH( c.content,'(np\.|numpy\.)cross\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_cross,
REGEXP_MATCH( c.content,'(np\.|numpy\.)cumprod\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_cumprod,
REGEXP_MATCH( c.content,'(np\.|numpy\.)cumproduct\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_cumproduct,
REGEXP_MATCH( c.content,'(np\.|numpy\.)cumsum\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_cumsum,
REGEXP_MATCH( c.content,'(np\.|numpy\.)delete\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_delete,
REGEXP_MATCH( c.content,'(np\.|numpy\.)deprecate\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_deprecate,
REGEXP_MATCH( c.content,'(np\.|numpy\.)deprecate_with_doc\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_deprecate_with_doc,
REGEXP_MATCH( c.content,'(np\.|numpy\.)diag\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_diag,
REGEXP_MATCH( c.content,'(np\.|numpy\.)diag_indices\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_diag_indices,
REGEXP_MATCH( c.content,'(np\.|numpy\.)diag_indices_from\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_diag_indices_from,
REGEXP_MATCH( c.content,'(np\.|numpy\.)diagflat\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_diagflat,
REGEXP_MATCH( c.content,'(np\.|numpy\.)diagonal\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_diagonal,
REGEXP_MATCH( c.content,'(np\.|numpy\.)diff\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_diff,
REGEXP_MATCH( c.content,'(np\.|numpy\.)disp\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_disp,
REGEXP_MATCH( c.content,'(np\.|numpy\.)dsplit\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_dsplit,
REGEXP_MATCH( c.content,'(np\.|numpy\.)dstack\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_dstack,
REGEXP_MATCH( c.content,'(np\.|numpy\.)ediff1d\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_ediff1d,
REGEXP_MATCH( c.content,'(np\.|numpy\.)einsum\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_einsum,
REGEXP_MATCH( c.content,'(np\.|numpy\.)einsum_path\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_einsum_path,
REGEXP_MATCH( c.content,'(np\.|numpy\.)expand_dims\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_expand_dims,
REGEXP_MATCH( c.content,'(np\.|numpy\.)extract\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_extract,
REGEXP_MATCH( c.content,'(np\.|numpy\.)eye\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_eye,
REGEXP_MATCH( c.content,'(np\.|numpy\.)fill_diagonal\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_fill_diagonal,
REGEXP_MATCH( c.content,'(np\.|numpy\.)find_common_type\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_find_common_type,
REGEXP_MATCH( c.content,'(np\.|numpy\.)fix\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_fix,
REGEXP_MATCH( c.content,'(np\.|numpy\.)flatnonzero\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_flatnonzero,
REGEXP_MATCH( c.content,'(np\.|numpy\.)flip\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_flip,
REGEXP_MATCH( c.content,'(np\.|numpy\.)fliplr\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_fliplr,
REGEXP_MATCH( c.content,'(np\.|numpy\.)flipud\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_flipud,
REGEXP_MATCH( c.content,'(np\.|numpy\.)format_float_positional\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_format_float_positional,
REGEXP_MATCH( c.content,'(np\.|numpy\.)format_float_scientific\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_format_float_scientific,
REGEXP_MATCH( c.content,'(np\.|numpy\.)fromfunction\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_fromfunction,
REGEXP_MATCH( c.content,'(np\.|numpy\.)fromregex\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_fromregex,
REGEXP_MATCH( c.content,'(np\.|numpy\.)full\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_full,
REGEXP_MATCH( c.content,'(np\.|numpy\.)full_like\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_full_like,
REGEXP_MATCH( c.content,'(np\.|numpy\.)fv\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_fv,
REGEXP_MATCH( c.content,'(np\.|numpy\.)genfromtxt\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_genfromtxt,
REGEXP_MATCH( c.content,'(np\.|numpy\.)geomspace\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_geomspace,
REGEXP_MATCH( c.content,'(np\.|numpy\.)get_array_wrap\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_get_array_wrap,
REGEXP_MATCH( c.content,'(np\.|numpy\.)get_include\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_get_include,
REGEXP_MATCH( c.content,'(np\.|numpy\.)get_printoptions\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_get_printoptions,
REGEXP_MATCH( c.content,'(np\.|numpy\.)getbufsize\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_getbufsize,
REGEXP_MATCH( c.content,'(np\.|numpy\.)geterr\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_geterr,
REGEXP_MATCH( c.content,'(np\.|numpy\.)geterrcall\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_geterrcall,
REGEXP_MATCH( c.content,'(np\.|numpy\.)gradient\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_gradient,
REGEXP_MATCH( c.content,'(np\.|numpy\.)hamming\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_hamming,
REGEXP_MATCH( c.content,'(np\.|numpy\.)hanning\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_hanning,
REGEXP_MATCH( c.content,'(np\.|numpy\.)histogram\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_histogram,
REGEXP_MATCH( c.content,'(np\.|numpy\.)histogram2d\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_histogram2d,
REGEXP_MATCH( c.content,'(np\.|numpy\.)histogram_bin_edges\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_histogram_bin_edges,
REGEXP_MATCH( c.content,'(np\.|numpy\.)histogramdd\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_histogramdd,
REGEXP_MATCH( c.content,'(np\.|numpy\.)hsplit\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_hsplit,
REGEXP_MATCH( c.content,'(np\.|numpy\.)hstack\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_hstack,
REGEXP_MATCH( c.content,'(np\.|numpy\.)i0\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_i0,
REGEXP_MATCH( c.content,'(np\.|numpy\.)identity\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_identity,
REGEXP_MATCH( c.content,'(np\.|numpy\.)imag\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_imag,
REGEXP_MATCH( c.content,'(np\.|numpy\.)in1d\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_in1d,
REGEXP_MATCH( c.content,'(np\.|numpy\.)indices\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_indices,
REGEXP_MATCH( c.content,'(np\.|numpy\.)info\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_info,
REGEXP_MATCH( c.content,'(np\.|numpy\.)insert\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_insert,
REGEXP_MATCH( c.content,'(np\.|numpy\.)interp\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_interp,
REGEXP_MATCH( c.content,'(np\.|numpy\.)intersect1d\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_intersect1d,
REGEXP_MATCH( c.content,'(np\.|numpy\.)ipmt\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_ipmt,
REGEXP_MATCH( c.content,'(np\.|numpy\.)irr\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_irr,
REGEXP_MATCH( c.content,'(np\.|numpy\.)isclose\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_isclose,
REGEXP_MATCH( c.content,'(np\.|numpy\.)iscomplex\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_iscomplex,
REGEXP_MATCH( c.content,'(np\.|numpy\.)iscomplexobj\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_iscomplexobj,
REGEXP_MATCH( c.content,'(np\.|numpy\.)isfortran\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_isfortran,
REGEXP_MATCH( c.content,'(np\.|numpy\.)isin\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_isin,
REGEXP_MATCH( c.content,'(np\.|numpy\.)isneginf\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_isneginf,
REGEXP_MATCH( c.content,'(np\.|numpy\.)isposinf\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_isposinf,
REGEXP_MATCH( c.content,'(np\.|numpy\.)isreal\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_isreal,
REGEXP_MATCH( c.content,'(np\.|numpy\.)isrealobj\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_isrealobj,
REGEXP_MATCH( c.content,'(np\.|numpy\.)isscalar\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_isscalar,
REGEXP_MATCH( c.content,'(np\.|numpy\.)issctype\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_issctype,
REGEXP_MATCH( c.content,'(np\.|numpy\.)issubclass_\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_issubclass_,
REGEXP_MATCH( c.content,'(np\.|numpy\.)issubdtype\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_issubdtype,
REGEXP_MATCH( c.content,'(np\.|numpy\.)issubsctype\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_issubsctype,
REGEXP_MATCH( c.content,'(np\.|numpy\.)iterable\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_iterable,
REGEXP_MATCH( c.content,'(np\.|numpy\.)ix_\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_ix_,
REGEXP_MATCH( c.content,'(np\.|numpy\.)kaiser\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_kaiser,
REGEXP_MATCH( c.content,'(np\.|numpy\.)kron\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_kron,
REGEXP_MATCH( c.content,'(np\.|numpy\.)linspace\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_linspace,
REGEXP_MATCH( c.content,'(np\.|numpy\.)load\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_load,
REGEXP_MATCH( c.content,'(np\.|numpy\.)loads\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_loads,
REGEXP_MATCH( c.content,'(np\.|numpy\.)loadtxt\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_loadtxt,
REGEXP_MATCH( c.content,'(np\.|numpy\.)logspace\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_logspace,
REGEXP_MATCH( c.content,'(np\.|numpy\.)lookfor\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_lookfor,
REGEXP_MATCH( c.content,'(np\.|numpy\.)mafromtxt\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_mafromtxt,
REGEXP_MATCH( c.content,'(np\.|numpy\.)mask_indices\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_mask_indices,
REGEXP_MATCH( c.content,'(np\.|numpy\.)mat\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_mat,
REGEXP_MATCH( c.content,'(np\.|numpy\.)max\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_max,
REGEXP_MATCH( c.content,'(np\.|numpy\.)maximum_sctype\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_maximum_sctype,
REGEXP_MATCH( c.content,'(np\.|numpy\.)mean\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_mean,
REGEXP_MATCH( c.content,'(np\.|numpy\.)median\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_median,
REGEXP_MATCH( c.content,'(np\.|numpy\.)meshgrid\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_meshgrid,
REGEXP_MATCH( c.content,'(np\.|numpy\.)min\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_min,
REGEXP_MATCH( c.content,'(np\.|numpy\.)mintypecode\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_mintypecode,
REGEXP_MATCH( c.content,'(np\.|numpy\.)mirr\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_mirr,
REGEXP_MATCH( c.content,'(np\.|numpy\.)moveaxis\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_moveaxis,
REGEXP_MATCH( c.content,'(np\.|numpy\.)msort\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_msort,
REGEXP_MATCH( c.content,'(np\.|numpy\.)nan_to_num\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_nan_to_num,
REGEXP_MATCH( c.content,'(np\.|numpy\.)nanargmax\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_nanargmax,
REGEXP_MATCH( c.content,'(np\.|numpy\.)nanargmin\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_nanargmin,
REGEXP_MATCH( c.content,'(np\.|numpy\.)nancumprod\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_nancumprod,
REGEXP_MATCH( c.content,'(np\.|numpy\.)nancumsum\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_nancumsum,
REGEXP_MATCH( c.content,'(np\.|numpy\.)nanmax\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_nanmax,
REGEXP_MATCH( c.content,'(np\.|numpy\.)nanmean\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_nanmean,
REGEXP_MATCH( c.content,'(np\.|numpy\.)nanmedian\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_nanmedian,
REGEXP_MATCH( c.content,'(np\.|numpy\.)nanmin\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_nanmin,
REGEXP_MATCH( c.content,'(np\.|numpy\.)nanpercentile\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_nanpercentile,
REGEXP_MATCH( c.content,'(np\.|numpy\.)nanprod\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_nanprod,
REGEXP_MATCH( c.content,'(np\.|numpy\.)nanquantile\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_nanquantile,
REGEXP_MATCH( c.content,'(np\.|numpy\.)nanstd\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_nanstd,
REGEXP_MATCH( c.content,'(np\.|numpy\.)nansum\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_nansum,
REGEXP_MATCH( c.content,'(np\.|numpy\.)nanvar\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_nanvar,
REGEXP_MATCH( c.content,'(np\.|numpy\.)ndfromtxt\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_ndfromtxt,
REGEXP_MATCH( c.content,'(np\.|numpy\.)ndim\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_ndim,
REGEXP_MATCH( c.content,'(np\.|numpy\.)nonzero\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_nonzero,
REGEXP_MATCH( c.content,'(np\.|numpy\.)nper\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_nper,
REGEXP_MATCH( c.content,'(np\.|numpy\.)npv\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_npv,
REGEXP_MATCH( c.content,'(np\.|numpy\.)obj2sctype\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_obj2sctype,
REGEXP_MATCH( c.content,'(np\.|numpy\.)ones\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_ones,
REGEXP_MATCH( c.content,'(np\.|numpy\.)ones_like\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_ones_like,
REGEXP_MATCH( c.content,'(np\.|numpy\.)outer\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_outer,
REGEXP_MATCH( c.content,'(np\.|numpy\.)pad\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_pad,
REGEXP_MATCH( c.content,'(np\.|numpy\.)partition\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_partition,
REGEXP_MATCH( c.content,'(np\.|numpy\.)percentile\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_percentile,
REGEXP_MATCH( c.content,'(np\.|numpy\.)piecewise\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_piecewise,
REGEXP_MATCH( c.content,'(np\.|numpy\.)pkgload\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_pkgload,
REGEXP_MATCH( c.content,'(np\.|numpy\.)place\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_place,
REGEXP_MATCH( c.content,'(np\.|numpy\.)pmt\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_pmt,
REGEXP_MATCH( c.content,'(np\.|numpy\.)poly\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_poly,
REGEXP_MATCH( c.content,'(np\.|numpy\.)polyadd\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_polyadd,
REGEXP_MATCH( c.content,'(np\.|numpy\.)polyder\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_polyder,
REGEXP_MATCH( c.content,'(np\.|numpy\.)polydiv\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_polydiv,
REGEXP_MATCH( c.content,'(np\.|numpy\.)polyfit\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_polyfit,
REGEXP_MATCH( c.content,'(np\.|numpy\.)polyint\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_polyint,
REGEXP_MATCH( c.content,'(np\.|numpy\.)polymul\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_polymul,
REGEXP_MATCH( c.content,'(np\.|numpy\.)polysub\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_polysub,
REGEXP_MATCH( c.content,'(np\.|numpy\.)polyval\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_polyval,
REGEXP_MATCH( c.content,'(np\.|numpy\.)ppmt\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_ppmt,
REGEXP_MATCH( c.content,'(np\.|numpy\.)printoptions\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_printoptions,
REGEXP_MATCH( c.content,'(np\.|numpy\.)prod\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_prod,
REGEXP_MATCH( c.content,'(np\.|numpy\.)product\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_product,
REGEXP_MATCH( c.content,'(np\.|numpy\.)ptp\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_ptp,
REGEXP_MATCH( c.content,'(np\.|numpy\.)put\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_put,
REGEXP_MATCH( c.content,'(np\.|numpy\.)put_along_axis\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_put_along_axis,
REGEXP_MATCH( c.content,'(np\.|numpy\.)pv\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_pv,
REGEXP_MATCH( c.content,'(np\.|numpy\.)quantile\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_quantile,
REGEXP_MATCH( c.content,'(np\.|numpy\.)rank\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_rank,
REGEXP_MATCH( c.content,'(np\.|numpy\.)rate\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_rate,
REGEXP_MATCH( c.content,'(np\.|numpy\.)ravel\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_ravel,
REGEXP_MATCH( c.content,'(np\.|numpy\.)real\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_real,
REGEXP_MATCH( c.content,'(np\.|numpy\.)real_if_close\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_real_if_close,
REGEXP_MATCH( c.content,'(np\.|numpy\.)recfromcsv\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_recfromcsv,
REGEXP_MATCH( c.content,'(np\.|numpy\.)recfromtxt\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_recfromtxt,
REGEXP_MATCH( c.content,'(np\.|numpy\.)repeat\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_repeat,
REGEXP_MATCH( c.content,'(np\.|numpy\.)require\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_require,
REGEXP_MATCH( c.content,'(np\.|numpy\.)reshape\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_reshape,
REGEXP_MATCH( c.content,'(np\.|numpy\.)resize\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_resize,
REGEXP_MATCH( c.content,'(np\.|numpy\.)roll\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_roll,
REGEXP_MATCH( c.content,'(np\.|numpy\.)rollaxis\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_rollaxis,
REGEXP_MATCH( c.content,'(np\.|numpy\.)roots\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_roots,
REGEXP_MATCH( c.content,'(np\.|numpy\.)rot90\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_rot90,
REGEXP_MATCH( c.content,'(np\.|numpy\.)round\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_round,
REGEXP_MATCH( c.content,'(np\.|numpy\.)round_\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_round_,
REGEXP_MATCH( c.content,'(np\.|numpy\.)row_stack\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_row_stack,
REGEXP_MATCH( c.content,'(np\.|numpy\.)safe_eval\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_safe_eval,
REGEXP_MATCH( c.content,'(np\.|numpy\.)save\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_save,
REGEXP_MATCH( c.content,'(np\.|numpy\.)savetxt\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_savetxt,
REGEXP_MATCH( c.content,'(np\.|numpy\.)savez\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_savez,
REGEXP_MATCH( c.content,'(np\.|numpy\.)savez_compressed\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_savez_compressed,
REGEXP_MATCH( c.content,'(np\.|numpy\.)sctype2char\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_sctype2char,
REGEXP_MATCH( c.content,'(np\.|numpy\.)searchsorted\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_searchsorted,
REGEXP_MATCH( c.content,'(np\.|numpy\.)select\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_select,
REGEXP_MATCH( c.content,'(np\.|numpy\.)set_printoptions\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_set_printoptions,
REGEXP_MATCH( c.content,'(np\.|numpy\.)set_string_function\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_set_string_function,
REGEXP_MATCH( c.content,'(np\.|numpy\.)setbufsize\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_setbufsize,
REGEXP_MATCH( c.content,'(np\.|numpy\.)setdiff1d\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_setdiff1d,
REGEXP_MATCH( c.content,'(np\.|numpy\.)seterr\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_seterr,
REGEXP_MATCH( c.content,'(np\.|numpy\.)seterrcall\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_seterrcall,
REGEXP_MATCH( c.content,'(np\.|numpy\.)setxor1d\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_setxor1d,
REGEXP_MATCH( c.content,'(np\.|numpy\.)shape\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_shape,
REGEXP_MATCH( c.content,'(np\.|numpy\.)show_config\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_show_config,
REGEXP_MATCH( c.content,'(np\.|numpy\.)sinc\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_sinc,
REGEXP_MATCH( c.content,'(np\.|numpy\.)size\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_size,
REGEXP_MATCH( c.content,'(np\.|numpy\.)sometrue\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_sometrue,
REGEXP_MATCH( c.content,'(np\.|numpy\.)sort\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_sort,
REGEXP_MATCH( c.content,'(np\.|numpy\.)sort_complex\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_sort_complex,
REGEXP_MATCH( c.content,'(np\.|numpy\.)source\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_source,
REGEXP_MATCH( c.content,'(np\.|numpy\.)split\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_split,
REGEXP_MATCH( c.content,'(np\.|numpy\.)squeeze\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_squeeze,
REGEXP_MATCH( c.content,'(np\.|numpy\.)stack\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_stack,
REGEXP_MATCH( c.content,'(np\.|numpy\.)std\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_std,
REGEXP_MATCH( c.content,'(np\.|numpy\.)sum\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_sum,
REGEXP_MATCH( c.content,'(np\.|numpy\.)swapaxes\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_swapaxes,
REGEXP_MATCH( c.content,'(np\.|numpy\.)take\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_take,
REGEXP_MATCH( c.content,'(np\.|numpy\.)take_along_axis\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_take_along_axis,
REGEXP_MATCH( c.content,'(np\.|numpy\.)tensordot\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_tensordot,
REGEXP_MATCH( c.content,'(np\.|numpy\.)tile\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_tile,
REGEXP_MATCH( c.content,'(np\.|numpy\.)trace\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_trace,
REGEXP_MATCH( c.content,'(np\.|numpy\.)transpose\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_transpose,
REGEXP_MATCH( c.content,'(np\.|numpy\.)trapz\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_trapz,
REGEXP_MATCH( c.content,'(np\.|numpy\.)tri\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_tri,
REGEXP_MATCH( c.content,'(np\.|numpy\.)tril\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_tril,
REGEXP_MATCH( c.content,'(np\.|numpy\.)tril_indices\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_tril_indices,
REGEXP_MATCH( c.content,'(np\.|numpy\.)tril_indices_from\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_tril_indices_from,
REGEXP_MATCH( c.content,'(np\.|numpy\.)trim_zeros\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_trim_zeros,
REGEXP_MATCH( c.content,'(np\.|numpy\.)triu\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_triu,
REGEXP_MATCH( c.content,'(np\.|numpy\.)triu_indices\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_triu_indices,
REGEXP_MATCH( c.content,'(np\.|numpy\.)triu_indices_from\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_triu_indices_from,
REGEXP_MATCH( c.content,'(np\.|numpy\.)typename\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_typename,
REGEXP_MATCH( c.content,'(np\.|numpy\.)union1d\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_union1d,
REGEXP_MATCH( c.content,'(np\.|numpy\.)unique\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_unique,
REGEXP_MATCH( c.content,'(np\.|numpy\.)unwrap\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_unwrap,
REGEXP_MATCH( c.content,'(np\.|numpy\.)vander\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_vander,
REGEXP_MATCH( c.content,'(np\.|numpy\.)var\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_var,
REGEXP_MATCH( c.content,'(np\.|numpy\.)vsplit\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_vsplit,
REGEXP_MATCH( c.content,'(np\.|numpy\.)vstack\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_vstack,
REGEXP_MATCH( c.content,'(np\.|numpy\.)who\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_who,
REGEXP_MATCH( c.content,'(np\.|numpy\.)zeros_like\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_function_zeros_like,
REGEXP_MATCH(c.content,'(np\.|numpy\.)Inf\s*[\*\+\-\/]?' ) AS numpy_float_inf1,
REGEXP_MATCH(c.content,'(np\.|numpy\.)Infinity\s*[\*\+\-\/]?' ) AS numpy_float_Infinity,
REGEXP_MATCH(c.content,'(np\.|numpy\.)NAN\s*[\*\+\-\/]?' ) AS numpy_float_nan2,
REGEXP_MATCH(c.content,'(np\.|numpy\.)NINF\s*[\*\+\-\/]?' ) AS numpy_float_NINF,
REGEXP_MATCH(c.content,'(np\.|numpy\.)NZERO\s*[\*\+\-\/]?' ) AS numpy_float_NZERO,
REGEXP_MATCH(c.content,'(np\.|numpy\.)NaN\s*[\*\+\-\/]?' ) AS numpy_float_nan1,
REGEXP_MATCH(c.content,'(np\.|numpy\.)PINF\s*[\*\+\-\/]?' ) AS numpy_float_PINF,
REGEXP_MATCH(c.content,'(np\.|numpy\.)PZERO\s*[\*\+\-\/]?' ) AS numpy_float_PZERO,
REGEXP_MATCH(c.content,'(np\.|numpy\.)e\s*[\*\+\-\/]?' ) AS numpy_float_e,
REGEXP_MATCH(c.content,'(np\.|numpy\.)euler_gamma\s*[\*\+\-\/]?' ) AS numpy_float_euler_gamma,
REGEXP_MATCH(c.content,'(np\.|numpy\.)inf\s*[\*\+\-\/]?' ) AS numpy_float_inf2,
REGEXP_MATCH(c.content,'(np\.|numpy\.)infty\s*[\*\+\-\/]?' ) AS numpy_float_infty,
REGEXP_MATCH(c.content,'(np\.|numpy\.)nan\s*[\*\+\-\/]?' ) AS numpy_float_nan3,
REGEXP_MATCH(c.content,'(np\.|numpy\.)pi\s*[\*\+\-\/]?' ) AS numpy_float_pi,
REGEXP_MATCH(c.content,'(np\.|numpy\.)ALLOW_THREADS' ) AS numpy_int_ALLOW_THREADS,
REGEXP_MATCH(c.content,'(np\.|numpy\.)BUFSIZE' ) AS numpy_int_BUFSIZE,
REGEXP_MATCH(c.content,'(np\.|numpy\.)CLIP' ) AS numpy_int_CLIP,
REGEXP_MATCH(c.content,'(np\.|numpy\.)ERR_CALL' ) AS numpy_int_ERR_CALL,
REGEXP_MATCH(c.content,'(np\.|numpy\.)ERR_DEFAULT' ) AS numpy_int_ERR_DEFAULT,
REGEXP_MATCH(c.content,'(np\.|numpy\.)ERR_IGNORE' ) AS numpy_int_ERR_IGNORE,
REGEXP_MATCH(c.content,'(np\.|numpy\.)ERR_LOG' ) AS numpy_int_ERR_LOG,
REGEXP_MATCH(c.content,'(np\.|numpy\.)ERR_PRINT' ) AS numpy_int_ERR_PRINT,
REGEXP_MATCH(c.content,'(np\.|numpy\.)ERR_RAISE' ) AS numpy_int_ERR_RAISE,
REGEXP_MATCH(c.content,'(np\.|numpy\.)ERR_WARN' ) AS numpy_int_ERR_WARN,
REGEXP_MATCH(c.content,'(np\.|numpy\.)FLOATING_POINT_SUPPORT' ) AS numpy_int_FLOATING_POINT_SUPPORT,
REGEXP_MATCH(c.content,'(np\.|numpy\.)FPE_DIVIDEBYZERO' ) AS numpy_int_FPE_DIVIDEBYZERO,
REGEXP_MATCH(c.content,'(np\.|numpy\.)FPE_INVALID' ) AS numpy_int_FPE_INVALID,
REGEXP_MATCH(c.content,'(np\.|numpy\.)FPE_OVERFLOW' ) AS numpy_int_FPE_OVERFLOW,
REGEXP_MATCH(c.content,'(np\.|numpy\.)FPE_UNDERFLOW' ) AS numpy_int_FPE_UNDERFLOW,
REGEXP_MATCH(c.content,'(np\.|numpy\.)MAXDIMS' ) AS numpy_int_MAXDIMS,
REGEXP_MATCH(c.content,'(np\.|numpy\.)MAY_SHARE_BOUNDS' ) AS numpy_int_MAY_SHARE_BOUNDS,
REGEXP_MATCH(c.content,'(np\.|numpy\.)MAY_SHARE_EXACT' ) AS numpy_int_MAY_SHARE_EXACT,
REGEXP_MATCH(c.content,'(np\.|numpy\.)RAISE' ) AS numpy_int_RAISE,
REGEXP_MATCH(c.content,'(np\.|numpy\.)SHIFT_DIVIDEBYZERO' ) AS numpy_int_SHIFT_DIVIDEBYZERO,
REGEXP_MATCH(c.content,'(np\.|numpy\.)SHIFT_INVALID' ) AS numpy_int_SHIFT_INVALID,
REGEXP_MATCH(c.content,'(np\.|numpy\.)SHIFT_OVERFLOW' ) AS numpy_int_SHIFT_OVERFLOW,
REGEXP_MATCH(c.content,'(np\.|numpy\.)SHIFT_UNDERFLOW' ) AS numpy_int_SHIFT_UNDERFLOW,
REGEXP_MATCH(c.content,'(np\.|numpy\.)UFUNC_BUFSIZE_DEFAULT' ) AS numpy_int_UFUNC_BUFSIZE_DEFAULT,
REGEXP_MATCH(c.content,'(np\.|numpy\.)WRAP' ) AS numpy_int_WRAP,
REGEXP_MATCH(c.content,'(np\.|numpy\.)tracemalloc_domain' ) AS numpy_int_tracemalloc_domain,
REGEXP_MATCH(c.content,'(np\.|numpy\.)abs\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_abs,
REGEXP_MATCH(c.content,'(np\.|numpy\.)absolute\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_absolute,
REGEXP_MATCH(c.content,'(np\.|numpy\.)add\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_add,
REGEXP_MATCH(c.content,'(np\.|numpy\.)arccos\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_arccos,
REGEXP_MATCH(c.content,'(np\.|numpy\.)arccosh\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_arccosh,
REGEXP_MATCH(c.content,'(np\.|numpy\.)arcsin\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_arcsin,
REGEXP_MATCH(c.content,'(np\.|numpy\.)arcsinh\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_arcsinh,
REGEXP_MATCH(c.content,'(np\.|numpy\.)arctan\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_arctan,
REGEXP_MATCH(c.content,'(np\.|numpy\.)arctan2\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_arctan2,
REGEXP_MATCH(c.content,'(np\.|numpy\.)arctanh\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_arctanh,
REGEXP_MATCH(c.content,'(np\.|numpy\.)bitwise_and\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_bitwise_and,
REGEXP_MATCH(c.content,'(np\.|numpy\.)bitwise_not\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_bitwise_not,
REGEXP_MATCH(c.content,'(np\.|numpy\.)bitwise_or\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_bitwise_or,
REGEXP_MATCH(c.content,'(np\.|numpy\.)bitwise_xor\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_bitwise_xor,
REGEXP_MATCH(c.content,'(np\.|numpy\.)cbrt\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_cbrt,
REGEXP_MATCH(c.content,'(np\.|numpy\.)ceil\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_ceil,
REGEXP_MATCH(c.content,'(np\.|numpy\.)conj\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_conj,
REGEXP_MATCH(c.content,'(np\.|numpy\.)conjugate\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_conjugate,
REGEXP_MATCH(c.content,'(np\.|numpy\.)copysign\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_copysign,
REGEXP_MATCH(c.content,'(np\.|numpy\.)cos\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_cos,
REGEXP_MATCH(c.content,'(np\.|numpy\.)cosh\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_cosh,
REGEXP_MATCH(c.content,'(np\.|numpy\.)deg2rad\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_deg2rad,
REGEXP_MATCH(c.content,'(np\.|numpy\.)degrees\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_degrees,
REGEXP_MATCH(c.content,'(np\.|numpy\.)divide\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_divide,
REGEXP_MATCH(c.content,'(np\.|numpy\.)divmod\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_divmod,
REGEXP_MATCH(c.content,'(np\.|numpy\.)equal\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_equal,
REGEXP_MATCH(c.content,'(np\.|numpy\.)erf\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_erf,
REGEXP_MATCH(c.content,'(np\.|numpy\.)exp\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_exp,
REGEXP_MATCH(c.content,'(np\.|numpy\.)exp2\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_exp2,
REGEXP_MATCH(c.content,'(np\.|numpy\.)expm1\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_expm1,
REGEXP_MATCH(c.content,'(np\.|numpy\.)fabs\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_fabs,
REGEXP_MATCH(c.content,'(np\.|numpy\.)float_power\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_float_power,
REGEXP_MATCH(c.content,'(np\.|numpy\.)floor\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_floor,
REGEXP_MATCH(c.content,'(np\.|numpy\.)floor_divide\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_floor_divide,
REGEXP_MATCH(c.content,'(np\.|numpy\.)fmax\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_fmax,
REGEXP_MATCH(c.content,'(np\.|numpy\.)fmin\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_fmin,
REGEXP_MATCH(c.content,'(np\.|numpy\.)fmod\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_fmod,
REGEXP_MATCH(c.content,'(np\.|numpy\.)frexp\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_frexp,
REGEXP_MATCH(c.content,'(np\.|numpy\.)gcd\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_gcd,
REGEXP_MATCH(c.content,'(np\.|numpy\.)greater\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_greater,
REGEXP_MATCH(c.content,'(np\.|numpy\.)greater_equal\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_greater_equal,
REGEXP_MATCH(c.content,'(np\.|numpy\.)heaviside\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_heaviside,
REGEXP_MATCH(c.content,'(np\.|numpy\.)hypot\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_hypot,
REGEXP_MATCH(c.content,'(np\.|numpy\.)invert\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_invert,
REGEXP_MATCH(c.content,'(np\.|numpy\.)isfinite\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_isfinite,
REGEXP_MATCH(c.content,'(np\.|numpy\.)isinf\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_isinf,
REGEXP_MATCH(c.content,'(np\.|numpy\.)isnan\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_isnan,
REGEXP_MATCH(c.content,'(np\.|numpy\.)isnat\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_isnat,
REGEXP_MATCH(c.content,'(np\.|numpy\.)lcm\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_lcm,
REGEXP_MATCH(c.content,'(np\.|numpy\.)ldexp\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_ldexp,
REGEXP_MATCH(c.content,'(np\.|numpy\.)left_shift\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_left_shift,
REGEXP_MATCH(c.content,'(np\.|numpy\.)less\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_less,
REGEXP_MATCH(c.content,'(np\.|numpy\.)less_equal\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_less_equal,
REGEXP_MATCH(c.content,'(np\.|numpy\.)log\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_log,
REGEXP_MATCH(c.content,'(np\.|numpy\.)log10\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_log10,
REGEXP_MATCH(c.content,'(np\.|numpy\.)log1p\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_log1p,
REGEXP_MATCH(c.content,'(np\.|numpy\.)log2\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_log2,
REGEXP_MATCH(c.content,'(np\.|numpy\.)logaddexp\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_logaddexp,
REGEXP_MATCH(c.content,'(np\.|numpy\.)logaddexp2\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_logaddexp2,
REGEXP_MATCH(c.content,'(np\.|numpy\.)logical_and\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_logical_and,
REGEXP_MATCH(c.content,'(np\.|numpy\.)logical_not\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_logical_not,
REGEXP_MATCH(c.content,'(np\.|numpy\.)logical_or\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_logical_or,
REGEXP_MATCH(c.content,'(np\.|numpy\.)logical_xor\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_logical_xor,
REGEXP_MATCH(c.content,'(np\.|numpy\.)maximum\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_maximum,
REGEXP_MATCH(c.content,'(np\.|numpy\.)minimum\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_minimum,
REGEXP_MATCH(c.content,'(np\.|numpy\.)mod\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_mod,
REGEXP_MATCH(c.content,'(np\.|numpy\.)modf\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_modf,
REGEXP_MATCH(c.content,'(np\.|numpy\.)multiply\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_multiply,
REGEXP_MATCH(c.content,'(np\.|numpy\.)negative\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_negative,
REGEXP_MATCH(c.content,'(np\.|numpy\.)nextafter\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_nextafter,
REGEXP_MATCH(c.content,'(np\.|numpy\.)not_equal\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_not_equal,
REGEXP_MATCH(c.content,'(np\.|numpy\.)positive\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_positive,
REGEXP_MATCH(c.content,'(np\.|numpy\.)power\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_power,
REGEXP_MATCH(c.content,'(np\.|numpy\.)rad2deg\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_rad2deg,
REGEXP_MATCH(c.content,'(np\.|numpy\.)radians\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_radians,
REGEXP_MATCH(c.content,'(np\.|numpy\.)reciprocal\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_reciprocal,
REGEXP_MATCH(c.content,'(np\.|numpy\.)remainder\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_remainder,
REGEXP_MATCH(c.content,'(np\.|numpy\.)right_shift\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_right_shift,
REGEXP_MATCH(c.content,'(np\.|numpy\.)rint\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_rint,
REGEXP_MATCH(c.content,'(np\.|numpy\.)sign\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_sign,
REGEXP_MATCH(c.content,'(np\.|numpy\.)signbit\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_signbit,
REGEXP_MATCH(c.content,'(np\.|numpy\.)sin\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_sin,
REGEXP_MATCH(c.content,'(np\.|numpy\.)sinh\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_sinh,
REGEXP_MATCH(c.content,'(np\.|numpy\.)spacing\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_spacing,
REGEXP_MATCH(c.content,'(np\.|numpy\.)sqrt\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_sqrt,
REGEXP_MATCH(c.content,'(np\.|numpy\.)square\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_square,
REGEXP_MATCH(c.content,'(np\.|numpy\.)subtract\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_subtract,
REGEXP_MATCH(c.content,'(np\.|numpy\.)tan\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_tan,
REGEXP_MATCH(c.content,'(np\.|numpy\.)tanh\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_tanh,
REGEXP_MATCH(c.content,'(np\.|numpy\.)true_divide\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_true_divide,
REGEXP_MATCH(c.content,'(np\.|numpy\.)trunc\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_ufunc_trunc,
REGEXP_MATCH(c.content,'(np\.|numpy\.)add_docstring\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_builtin_function_or_method_add_docstring,
REGEXP_MATCH(c.content,'(np\.|numpy\.)add_newdoc_ufunc\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_builtin_function_or_method_add_newdoc_ufunc,
REGEXP_MATCH(c.content,'(np\.|numpy\.)arange\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_builtin_function_or_method_arange,
REGEXP_MATCH(c.content,'(np\.|numpy\.)array\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_builtin_function_or_method_array,
REGEXP_MATCH(c.content,'(np\.|numpy\.)bincount\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_builtin_function_or_method_bincount,
REGEXP_MATCH(c.content,'(np\.|numpy\.)busday_count\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_builtin_function_or_method_busday_count,
REGEXP_MATCH(c.content,'(np\.|numpy\.)busday_offset\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_builtin_function_or_method_busday_offset,
REGEXP_MATCH(c.content,'(np\.|numpy\.)can_cast\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_builtin_function_or_method_can_cast,
REGEXP_MATCH(c.content,'(np\.|numpy\.)compare_chararrays\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_builtin_function_or_method_compare_chararrays,
REGEXP_MATCH(c.content,'(np\.|numpy\.)concatenate\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_builtin_function_or_method_concatenate,
REGEXP_MATCH(c.content,'(np\.|numpy\.)copyto\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_builtin_function_or_method_copyto,
REGEXP_MATCH(c.content,'(np\.|numpy\.)datetime_as_string\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_builtin_function_or_method_datetime_as_string,
REGEXP_MATCH(c.content,'(np\.|numpy\.)datetime_data\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_builtin_function_or_method_datetime_data,
REGEXP_MATCH(c.content,'(np\.|numpy\.)digitize\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_builtin_function_or_method_digitize,
REGEXP_MATCH(c.content,'(np\.|numpy\.)dot\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_builtin_function_or_method_dot,
REGEXP_MATCH(c.content,'(np\.|numpy\.)empty\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_builtin_function_or_method_empty,
REGEXP_MATCH(c.content,'(np\.|numpy\.)empty_like\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_builtin_function_or_method_empty_like,
REGEXP_MATCH(c.content,'(np\.|numpy\.)fastCopyAndTranspose\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_builtin_function_or_method_fastCopyAndTranspose,
REGEXP_MATCH(c.content,'(np\.|numpy\.)frombuffer\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_builtin_function_or_method_frombuffer,
REGEXP_MATCH(c.content,'(np\.|numpy\.)fromfile\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_builtin_function_or_method_fromfile,
REGEXP_MATCH(c.content,'(np\.|numpy\.)fromiter\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_builtin_function_or_method_fromiter,
REGEXP_MATCH(c.content,'(np\.|numpy\.)frompyfunc\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_builtin_function_or_method_frompyfunc,
REGEXP_MATCH(c.content,'(np\.|numpy\.)fromstring\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_builtin_function_or_method_fromstring,
REGEXP_MATCH(c.content,'(np\.|numpy\.)geterrobj\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_builtin_function_or_method_geterrobj,
REGEXP_MATCH(c.content,'(np\.|numpy\.)inner\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_builtin_function_or_method_inner,
REGEXP_MATCH(c.content,'(np\.|numpy\.)int_asbuffer\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_builtin_function_or_method_int_asbuffer,
REGEXP_MATCH(c.content,'(np\.|numpy\.)is_busday\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_builtin_function_or_method_is_busday,
REGEXP_MATCH(c.content,'(np\.|numpy\.)lexsort\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_builtin_function_or_method_lexsort,
REGEXP_MATCH(c.content,'(np\.|numpy\.)matmul\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_builtin_function_or_method_matmul,
REGEXP_MATCH(c.content,'(np\.|numpy\.)may_share_memory\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_builtin_function_or_method_may_share_memory,
REGEXP_MATCH(c.content,'(np\.|numpy\.)min_scalar_type\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_builtin_function_or_method_min_scalar_type,
REGEXP_MATCH(c.content,'(np\.|numpy\.)nested_iters\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_builtin_function_or_method_nested_iters,
REGEXP_MATCH(c.content,'(np\.|numpy\.)packbits\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_builtin_function_or_method_packbits,
REGEXP_MATCH(c.content,'(np\.|numpy\.)promote_types\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_builtin_function_or_method_promote_types,
REGEXP_MATCH(c.content,'(np\.|numpy\.)putmask\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_builtin_function_or_method_putmask,
REGEXP_MATCH(c.content,'(np\.|numpy\.)ravel_multi_index\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_builtin_function_or_method_ravel_multi_index,
REGEXP_MATCH(c.content,'(np\.|numpy\.)result_type\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_builtin_function_or_method_result_type,
REGEXP_MATCH(c.content,'(np\.|numpy\.)set_numeric_ops\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_builtin_function_or_method_set_numeric_ops,
REGEXP_MATCH(c.content,'(np\.|numpy\.)seterrobj\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_builtin_function_or_method_seterrobj,
REGEXP_MATCH(c.content,'(np\.|numpy\.)shares_memory\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_builtin_function_or_method_shares_memory,
REGEXP_MATCH(c.content,'(np\.|numpy\.)unpackbits\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_builtin_function_or_method_unpackbits,
REGEXP_MATCH(c.content,'(np\.|numpy\.)unravel_index\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_builtin_function_or_method_unravel_index,
REGEXP_MATCH(c.content,'(np\.|numpy\.)vdot\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_builtin_function_or_method_vdot,
REGEXP_MATCH(c.content,'(np\.|numpy\.)where\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_builtin_function_or_method_where,
REGEXP_MATCH(c.content,'(np\.|numpy\.)zeros\(\s?[A-Za-z0-9_.\(\)]*\s?\)' ) AS numpy_builtin_function_or_method_zeros
FROM (SELECT
*
FROM
[bigquery-public-data:github_repos.contents] AS c
INNER JOIN
(SELECT
*
FROM
[bigquery-public-data:github_repos.files] AS f
WHERE
(
f.path LIKE '%.py' 
OR
f.path LIKE '%.ipynb'
) ) AS p
ON
c.id = p.id)